# -*- coding: utf-8 -*-
"""LIBROS Y BYTES.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mzY9UNTnz2UDg1CjJcB-4Y1GfqbnvZM7
"""

# 1. Definir variables b√°sicas y tipos de datos

inventario_libros = [
    {
        "t√≠tulo": "Cien a√±os de soledad",
        "autor": "Gabriel Garc√≠a M√°rquez",
        "precio": 15000.00,
        "cantidad en stock": 5
    },
    {
        "t√≠tulo": "El Alquimista",
        "autor": "Paulo Coelho",
        "precio": 12500.50,
        "cantidad en stock": 3
    },
    {
        "t√≠tulo": "1984",
        "autor": "George Orwell",
        "precio": 10000.75,
        "cantidad en stock": 10
    },
    {
        "t√≠tulo": "El Se√±or de los Anillos",
        "autor": "J.R.R. Tolkien",
        "precio": 25000.00,
        "cantidad en stock": 1
    },
    {
        "t√≠tulo": "Don Quijote de la Mancha",
        "autor": "Miguel de Cervantes",
        "precio": 20000.00,
        "cantidad en stock": 0
    }
]

print("Inventario de libros definido:")
print(inventario_libros)

# 2. Control de flujo

inventario_libros = [
    {
        "t√≠tulo": "Cien a√±os de soledad",
        "autor": "Gabriel Garc√≠a M√°rquez",
        "precio": 15000.00,
        "cantidad en stock": 5
    },
    {
        "t√≠tulo": "El Alquimista",
        "autor": "Paulo Coelho",
        "precio": 12500.50,
        "cantidad en stock": 3
    },
    {
        "t√≠tulo": "1984",
        "autor": "George Orwell",
        "precio": 10000.75,
        "cantidad en stock": 10
    },
    {
        "t√≠tulo": "El Se√±or de los Anillos",
        "autor": "J.R.R. Tolkien",
        "precio": 25000.00,
        "cantidad en stock": 1
    },
    {
        "t√≠tulo": "Don Quijote de la Mancha",
        "autor": "Miguel de Cervantes",
        "precio": 20000.00,
        "cantidad en stock": 0
    }
]

def mostrar_libros_disponibles():
    print("\nLibros con m√°s de una unidad en stock:")
    for libro in inventario_libros:
        if libro["cantidad en stock"] > 1:
            print(f"- {libro['t√≠tulo']} de {libro['autor']} (Stock: {libro['cantidad en stock']})")

mostrar_libros_disponibles()

# 3. Condiciones y operadores

inventario_libros = [
    {
        "t√≠tulo": "Cien a√±os de soledad",
        "autor": "Gabriel Garc√≠a M√°rquez",
        "precio": 15000.00,
        "cantidad en stock": 5
    },
    {
        "t√≠tulo": "El Alquimista",
        "autor": "Paulo Coelho",
        "precio": 12500.50,
        "cantidad en stock": 3
    },
    {
        "t√≠tulo": "1984",
        "autor": "George Orwell",
        "precio": 10000.75,
        "cantidad en stock": 10
    },
    {
        "t√≠tulo": "El Se√±or de los Anillos",
        "autor": "J.R.R. Tolkien",
        "precio": 25000.00,
        "cantidad en stock": 1
    },
    {
        "t√≠tulo": "Don Quijote de la Mancha",
        "autor": "Miguel de Cervantes",
        "precio": 20000.00,
        "cantidad en stock": 0
    }
]

def filtrar_libros_por_precio():
    try:
        precio_min = float(input("Ingrese el precio m√≠nimo: "))
        precio_max = float(input("Ingrese el precio m√°ximo: "))
        print("\nLibros en el rango de precios:")

        if precio_min > precio_max:
            print("‚ùå El precio m√≠nimo no puede ser mayor que el precio m√°ximo.")
        else:
            libros_encontrados = False
            for libro in inventario_libros:
                if precio_min <= libro["precio"] <= precio_max:
                    print(f"- {libro['t√≠tulo']} de {libro['autor']} - Precio: ${libro['precio']:.2f}")
                    libros_encontrados = True

            if not libros_encontrados:
                print("ü§∑‚Äç‚ôÇÔ∏è No se encontraron libros en ese rango de precios.")

    except ValueError:
        print("‚ùå Por favor, ingrese un valor num√©rico v√°lido.")

filtrar_libros_por_precio()

# 4. Funci√≥n personalizada para simular una compra

inventario_libros = [
    {
        "t√≠tulo": "Cien a√±os de soledad",
        "autor": "Gabriel Garc√≠a M√°rquez",
        "precio": 15000.00,
        "cantidad en stock": 5
    },
    {
        "t√≠tulo": "El Alquimista",
        "autor": "Paulo Coelho",
        "precio": 12500.50,
        "cantidad en stock": 3
    },
    {
        "t√≠tulo": "1984",
        "autor": "George Orwell",
        "precio": 10000.75,
        "cantidad en stock": 10
    },
    {
        "t√≠tulo": "El Se√±or de los Anillos",
        "autor": "J.R.R. Tolkien",
        "precio": 25000.00,
        "cantidad en stock": 1
    },
    {
        "t√≠tulo": "Don Quijote de la Mancha",
        "autor": "Miguel de Cervantes",
        "precio": 20000.00,
        "cantidad en stock": 0
    }
]

def comprar_libros(titulo, cantidad):
    for libro in inventario_libros:
        if libro["t√≠tulo"].lower() == titulo.lower():
            if cantidad <= libro["cantidad en stock"]:
                libro["cantidad en stock"] -= cantidad
                total_compra = cantidad * libro["precio"]
                print(f"‚úÖ Compra exitosa: {cantidad} x {libro['t√≠tulo']}. Total: ${total_compra:.2f}")
                return
            else:
                print(f"‚ö†Ô∏è Error: La cantidad solicitada ({cantidad}) es mayor que el stock disponible ({libro['cantidad en stock']}).")
                return

    print(f"‚ùå Error: El libro '{titulo}' no se encontr√≥ en el inventario.")

comprar_libros("1984", 2)
comprar_libros("El Se√±or de los Anillos", 2)
comprar_libros("El Mago de Oz", 1)

# 5. Uso de bucle while para iterar hasta que el usuario decida salir

inventario_libros = [
    {
        "t√≠tulo": "Cien a√±os de soledad",
        "autor": "Gabriel Garc√≠a M√°rquez",
        "precio": 15000.00,
        "cantidad en stock": 5
    },
    {
        "t√≠tulo": "El Alquimista",
        "autor": "Paulo Coelho",
        "precio": 12500.50,
        "cantidad en stock": 3
    },
    {
        "t√≠tulo": "1984",
        "autor": "George Orwell",
        "precio": 10000.75,
        "cantidad en stock": 10
    },
    {
        "t√≠tulo": "El Se√±or de los Anillos",
        "autor": "J.R.R. Tolkien",
        "precio": 25000.00,
        "cantidad en stock": 1
    },
    {
        "t√≠tulo": "Don Quijote de la Mancha",
        "autor": "Miguel de Cervantes",
        "precio": 20000.00,
        "cantidad en stock": 0
    }
]

def mostrar_libros_disponibles():
    print("\nLibros con m√°s de una unidad en stock:")
    for libro in inventario_libros:
        if libro["cantidad en stock"] > 1:
            print(f"- {libro['t√≠tulo']} de {libro['autor']} (Stock: {libro['cantidad en stock']})")

def filtrar_libros_por_precio():
    try:
        precio_min = float(input("Ingrese el precio m√≠nimo: "))
        precio_max = float(input("Ingrese el precio m√°ximo: "))
        print("\nLibros en el rango de precios:")

        if precio_min > precio_max:
            print("‚ùå El precio m√≠nimo no puede ser mayor que el precio m√°ximo.")
        else:
            libros_encontrados = False
            for libro in inventario_libros:
                if precio_min <= libro["precio"] <= precio_max:
                    print(f"- {libro['t√≠tulo']} de {libro['autor']} - Precio: ${libro['precio']:.2f}")
                    libros_encontrados = True

            if not libros_encontrados:
                print("ü§∑‚Äç‚ôÇÔ∏è No se encontraron libros en ese rango de precios.")

    except ValueError:
        print("‚ùå Por favor, ingrese un valor num√©rico v√°lido.")

def comprar_libros():
    titulo = input("Ingrese el t√≠tulo del libro a comprar: ")
    try:
        cantidad = int(input("Ingrese la cantidad deseada: "))
    except ValueError:
        print("‚ùå Por favor, ingrese una cantidad num√©rica v√°lida.")
        return

    for libro in inventario_libros:
        if libro["t√≠tulo"].lower() == titulo.lower():
            if cantidad <= libro["cantidad en stock"]:
                libro["cantidad en stock"] -= cantidad
                total_compra = cantidad * libro["precio"]
                print(f"‚úÖ Compra exitosa: {cantidad} x {libro['t√≠tulo']}. Total: ${total_compra:.2f}")
            else:
                print(f"‚ö†Ô∏è Error: La cantidad solicitada ({cantidad}) es mayor que el stock disponible ({libro['cantidad en stock']}).")
            return

    print(f"‚ùå Error: El libro '{titulo}' no se encontr√≥ en el inventario.")


while True:
    print("\n--- Sistema de Compras de Libros & Bytes ---")
    print("1. Mostrar libros disponibles")
    print("2. Filtrar libros por rango de precios")
    print("3. Comprar libro")
    print("4. Salir")

    opcion = input("Seleccione una opci√≥n: ")

    if opcion == "1":
        mostrar_libros_disponibles()
    elif opcion == "2":
        filtrar_libros_por_precio()
    elif opcion == "3":
        comprar_libros()
    elif opcion == "4":
        print("üëã ¬°Gracias por usar el sistema! Saliendo...")
        break
    else:
        print("‚ùå Opci√≥n no v√°lida. Por favor, intente de nuevo.")

# 6. Estructura de datos, gesti√≥n de descuentos

inventario_libros = [
    {
        "t√≠tulo": "Cien a√±os de soledad",
        "autor": "Gabriel Garc√≠a M√°rquez",
        "precio": 15000.00,
        "cantidad en stock": 5
    },
    {
        "t√≠tulo": "El Alquimista",
        "autor": "Paulo Coelho",
        "precio": 12500.50,
        "cantidad en stock": 3
    },
    {
        "t√≠tulo": "1984",
        "autor": "George Orwell",
        "precio": 10000.75,
        "cantidad en stock": 10
    },
    {
        "t√≠tulo": "El Se√±or de los Anillos",
        "autor": "J.R.R. Tolkien",
        "precio": 25000.00,
        "cantidad en stock": 1
    },
    {
        "t√≠tulo": "Data Science con Python",
        "autor": "John Doe",
        "precio": 25000.00,
        "cantidad en stock": 4
    }
]


descuentos_autores = {
    "John Doe": 0.15,
    "Gabriel Garc√≠a M√°rquez": 0.10
}

def comprar_libros(titulo, cantidad):
    for libro in inventario_libros:
        if libro["t√≠tulo"].lower() == titulo.lower():
            if cantidad <= libro["cantidad en stock"]:
                libro["cantidad en stock"] -= cantidad
                precio_unitario = libro["precio"]
                total_sin_descuento = cantidad * precio_unitario


                descuento = 0
                if libro["autor"] in descuentos_autores:
                    porcentaje_descuento = descuentos_autores[libro["autor"]]
                    descuento = total_sin_descuento * porcentaje_descuento
                    print(f"üéâ Descuento aplicado: {porcentaje_descuento * 100}%")

                total_con_descuento = total_sin_descuento - descuento

                print(f"‚úÖ Compra exitosa: {cantidad} x {libro['t√≠tulo']}. Total: ${total_con_descuento:.2f}")
                return
            else:
                print(f"‚ö†Ô∏è Error: La cantidad solicitada ({cantidad}) es mayor que el stock disponible ({libro['cantidad en stock']}).")
                return

    print(f"‚ùå Error: El libro '{titulo}' no se encontr√≥ en el inventario.")

# Test cases
comprar_libros("Data Science con Python", 2)
comprar_libros("Cien a√±os de soledad", 1)
comprar_libros("1984", 2)

# 7. Simulaci√≥n de una factura

inventario_libros = [
    {
        "t√≠tulo": "Cien a√±os de soledad",
        "autor": "Gabriel Garc√≠a M√°rquez",
        "precio": 15000.00,
        "cantidad en stock": 5
    },
    {
        "t√≠tulo": "El Alquimista",
        "autor": "Paulo Coelho",
        "precio": 12500.50,
        "cantidad en stock": 3
    },
    {
        "t√≠tulo": "1984",
        "autor": "George Orwell",
        "precio": 10000.75,
        "cantidad en stock": 10
    },
    {
        "t√≠tulo": "El Se√±or de los Anillos",
        "autor": "J.R.R. Tolkien",
        "precio": 25000.00,
        "cantidad en stock": 1
    },
    {
        "t√≠tulo": "Data Science con Python",
        "autor": "John Doe",
        "precio": 25000.00,
        "cantidad en stock": 4
    }
]

descuentos_autores = {
    "John Doe": 0.15,
    "Gabriel Garc√≠a M√°rquez": 0.10
}


carrito = []
total_ahorro = 0.0

def mostrar_libros_disponibles():
    print("\nüìö Libros disponibles con m√°s de una unidad en stock:")
    for libro in inventario_libros:
        if libro["cantidad en stock"] > 1:
            print(f"- {libro['t√≠tulo']} de {libro['autor']} (Stock: {libro['cantidad en stock']})")

def filtrar_libros_por_precio():
    try:
        precio_min = float(input("Ingrese el precio m√≠nimo: "))
        precio_max = float(input("Ingrese el precio m√°ximo: "))
        print("\nüîé Libros en el rango de precios:")

        if precio_min > precio_max:
            print("‚ùå El precio m√≠nimo no puede ser mayor que el precio m√°ximo.")
        else:
            libros_encontrados = False
            for libro in inventario_libros:
                if precio_min <= libro["precio"] <= precio_max:
                    print(f"- {libro['t√≠tulo']} de {libro['autor']} - Precio: ${libro['precio']:.2f}")
                    libros_encontrados = True

            if not libros_encontrados:
                print("ü§∑‚Äç‚ôÇÔ∏è No se encontraron libros en ese rango de precios.")

    except ValueError:
        print("‚ùå Por favor, ingrese un valor num√©rico v√°lido.")

def comprar_libro():
    global total_ahorro
    titulo = input("Ingrese el t√≠tulo del libro a comprar: ")
    try:
        cantidad = int(input("Ingrese la cantidad deseada: "))
    except ValueError:
        print("‚ùå Por favor, ingrese una cantidad num√©rica v√°lida.")
        return

    for libro in inventario_libros:
        if libro["t√≠tulo"].lower() == titulo.lower():
            if cantidad <= libro["cantidad en stock"]:
                libro["cantidad en stock"] -= cantidad
                precio_unitario = libro["precio"]
                total_sin_descuento = cantidad * precio_unitario

                descuento = 0
                if libro["autor"] in descuentos_autores:
                    porcentaje_descuento = descuentos_autores[libro["autor"]]
                    descuento = total_sin_descuento * porcentaje_descuento
                    total_ahorro += descuento
                    print(f"üéâ Descuento aplicado: {porcentaje_descuento * 100:.1f}%")

                total_con_descuento = total_sin_descuento - descuento


                carrito.append({
                    "t√≠tulo": libro["t√≠tulo"],
                    "cantidad": cantidad,
                    "total_pagado": total_con_descuento
                })

                print(f"‚úÖ Compra exitosa: {cantidad} x {libro['t√≠tulo']}. Total: ${total_con_descuento:.2f}")
                return
            else:
                print(f"‚ö†Ô∏è Error: La cantidad solicitada ({cantidad}) es mayor que el stock disponible ({libro['cantidad en stock']}).")
                return

    print(f"‚ùå Error: El libro '{titulo}' no se encontr√≥ en el inventario.")

def mostrar_factura():
    if not carrito:
        print("\nüõí El carrito de compras est√° vac√≠o.")
        return

    total_libros_comprados = sum(item["cantidad"] for item in carrito)
    total_pagado = sum(item["total_pagado"] for item in carrito)

    print("\n--- üßæ RESUMEN DE COMPRA ---")
    print(f"Total de libros comprados: {total_libros_comprados}")
    print(f"Monto total pagado: ${total_pagado:.2f}")
    print(f"Ahorro por descuentos: ${total_ahorro:.2f}")
    print("----------------------------")


while True:
    print("\n--- üè™ Sistema de Compras Libros & Bytes ---")
    print("1. Mostrar libros disponibles")
    print("2. Filtrar libros por rango de precios")
    print("3. Comprar libro")
    print("4. Finalizar compra y mostrar factura")
    print("5. Salir")

    opcion = input("Seleccione una opci√≥n: ")

    if opcion == "1":
        mostrar_libros_disponibles()
    elif opcion == "2":
        filtrar_libros_por_precio()
    elif opcion == "3":
        comprar_libro()
    elif opcion == "4":
        mostrar_factura()
        break
    elif opcion == "5":
        print("üëã ¬°Gracias por usar el sistema! Saliendo...")
        break
    else:
        print("‚ùå Opci√≥n no v√°lida. Por favor, intente de nuevo.")